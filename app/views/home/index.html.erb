

<head>
  <script src="//maps.google.com/maps/api/js?key=AIzaSyCMPe5C0yTvu9AGXdeFSD-AIwo5eilQUis"></script>
  <script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js" type='text/javascript'></script>
  <script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script>
  <%= javascript_include_tag :application %>
</head>

<div style='width: 100%; height: 400px'>
  <div id="map" style='width: 100%; height: 100%;'></div>
</div>

<script>
  
  var handler = Gmaps.build('Google');
  
  handler.buildMap(
    {
      provider: {
        disableDefaultUI: true, // pass in other Google Maps API options here
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        //styles: mapStyle
      },
      internal: {id: 'map'}
    },
  
    function(){
      // Get user location
      if(navigator.geolocation) //If we can get their location, set their location
      {
        navigator.geolocation.getCurrentPosition(displayUserOnMap);
      }
      else // If we can't set their location, just simulate it
      {
        displayUserOnMap( { lat: 38.8943, lng: 104.8025} ); //Default User location is UCCS
      }
      
      //Show Markers
      var markers = handler.addMarkers(buildExample());
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds(); 
    }
  );
  
  function buildExample()
  {
    return [
      buildMarker( 38.904813, -104.819010, null, "Il Vicino"),
      buildMarker( 38.904365, -104.818479, null, "Panera Bread"),
      buildMarker( 38.904318, -104.818078, null, "Smash Burger"),
      buildMarker( 38.904531, -104.817729, null, "Hacienda"),
    ];
  }
  
  function buildMarker(latitude, longitude, pictureURL, info)
  {
    // Documentation: https://developers.google.com/maps/documentation/static-maps/
    return marker = {
      lat: latitude,
      lng: longitude,
      picture: {
        url: pictureURL,
        width: 36,
        height: 36
      },
      infowindow: info
    }
  }
  
  function displayMarkersOnMap(markers){
    var marker = handler.addMarkers(markers); 
    
    handler.bounds.extendWith(marker);
    fitMapToBounds();
  }
  
  function displayUserOnMap(position){
    var userPos = handler.addMarker({
      lat: position.coords.latitude,
      lng: position.coords.longitude
    });
    
    handler.bounds.extendWith(userPos);
    handler.fitMapToBounds(); 
  };
  
</script>